#!/bin/bash
#######################################
# Execute scripts into remote machines
#######################################

echo "Executing Script into node$1"
if [ "$1" == "" ] ; then
	echo "ERROR: Sintax: $0 node_number $HOME"
	exit
fi
if [ "$2" == "" ] ; then
	echo "ERROR: Sintax: $0 node_number $HOME"
	exit
fi

# Change to directory home
homedir="$2"

if [ "$homedir" == "" ] ; then
	echo "ERROR: Home directory not found"
	exit
fi
cd $homedir

# Find the number of nodes to work
n_nodes=`grep n_nodes config/config.dat|cut -f2 -d'='`

#remove control node execution for first node
if [ -f nodes/node$1.ctl ] ; then
	rm nodes/node$1.ctl
fi
if [ -f nodes/finishNodes ] ; then
	touch nodes/finishNodes
fi
###############################################################################
# First step: preparation database: cleaning, lematization, term frequency (TF) and so on
# Comment or uncomment those lines for distributed or single process

# Lock all nodes
touch nodes/node1.ctl
echo "`date` - $0: First Step: TF"
./tDataset2.sh $1

#Lock all machines that job finished, wait for another
echo "$1" >> temp/lock.node$1
echo "`date` - $0: node $1 waiting for other guys"
while :
	do
	echo -e "`date` - $0: nodes done:\n`ls temp|grep lock`"
	sleep 10	
	scape=`ls temp|grep lock|wc -l`
	if [ $scape -eq $n_nodes  ] ; then
		break
	fi
	done
echo "Done-$1"
if [ -f temp/lock.nodes$1 ] ; then
	rm temp/lock.nodes$1
fi

echo "Next Step: Creating IDF"
###############################################################################
# Creating Inverted Document Frequency (IDF)
# Comment or uncomment this line for a split process
if [ -f index/ni.idx ] ; then
	rm index/ni.idx
fi
./tNi.sh $1

# Lock all machines that job finished, wait for another
echo "$1" >> temp/lock.node$1
echo "`date` - $0: node $1 waiting for other guys"
while :
	do
	echo -e "`date` - $0: nodes done:\n`ls temp|grep lock`"
	sleep 10	
	scape=`ls temp|grep lock|wc -l`
	if [ $scape -eq $n_nodes  ] ; then
		break
	fi
	done
echo "Done-$1"
if [ -f temp/lock.nodes$1 ] ; then
	rm temp/lock.nodes$1
fi

# Merge ni file
cat index/ni$1.idx >>index/ni.idx
rm index/ni$1.idx

echo "Next Step: Creating Index TF-IDF files"

###############################################################################
# Creating index files with TF-IDF vectors from all files and terms (sparce matrix)
# Comment or uncomment this line for a split process
./tIndex.sh $1

# Lock all machines that job finished, wait for another
echo "$1" >> temp/lock.node$1
echo "`date` - $0: node $1 waiting for other guys"
while :
	do
	echo -e "`date` - $0: nodes done:\n`ls temp|grep lock`"
	sleep 10	
	scape=`ls temp|grep lock|wc -l`
	if [ $scape -eq $n_nodes  ] ; then
		break
	fi
	done
echo "Done-$1"
if [ -f temp/lock.nodes$1 ] ; then
	rm temp/lock.nodes$1
fi

###############################################################################
# Clusterizing all files into clusters
# Comment or uncomment this line for a split process
echo "Next Step: Clustering"
touch nodes/node1.ctl
./cCluster.sh $1 0
echo "End $0 script"

